all:
  compiler: {{ environment.compilers }}
  providers:
    iconv: [libiconv]

{% set spack_external_root = spack_external | absolute_path(prefix=spack_root) %}

{%- macro intel_prefix(type) -%}
  {%- if 'prefix' in environment[type].intel -%}
{{ environment[type].intel.prefix | absolute_path(prefix=spack_external_root) }}
  {%- else -%}
{{ environment[type].intel.compiler | replace('@', '/') | absolute_path(prefix=spack_external_root) }}
  {%- endif -%}
{%- endmacro -%}

{% if 'intel' in environment.compilers and environment.stable.intel.external %}
intel:
  buildable: False
  paths:
  {%for type in environment.stack_types %}
    {% if 'intel' in environment[type]  and environment[type].intel.external %}
    {{environment[type].intel.compiler}} %{{environment.core_compiler}}: {{ intel_prefix(type) }}/compilers_and_libraries_{{environment[type].intel.suite_version}}/linux
    {% endif %}
  {%endfor%}

intel-mpi:
  buildable: False
  paths:
  {%for type in environment.stack_types %}
    {% if 'intel' in environment[type] and environment[type].intel.external %}
    {{environment[type].intel.mpi}} %{{environment[type].intel.compiler}}: {{ intel_prefix(type) }}
    {% endif %}
  {%endfor%}

intel-mkl:
  buildable: False
  paths:
  {%for type in environment.stack_types %}
    {% if 'intel' in environment[type] and environment[type].intel.external %}
    {{environment[type].intel.blas}} %{{environment[type].intel.compiler}}: {{ intel_prefix(type) }}
    {{environment[type].intel.blas}} %{{environment[type].gcc.compiler | filter_variant}}: {{ intel_prefix(type) }}
    {% endif %}
  {%endfor%}
{% endif %}

intel-vtune:
  buildable: False
  paths:
    intel-vtune@2019.6.0.602217 %{{environment.core_compiler}}:  {{ spack_external_root }}/intel/2019.5/vtune_amplifier_2019.6.0.602217

intel-advisor:
  buildable: False
  paths:
    intel-advisor@2019.5.0.602216 %{{environment.core_compiler}}:  {{ spack_external_root }}/intel/2019.5/advisor_2019.5.0.602216

cmake:
  version: [3.16.5]

openssl:
  version: [develop]
  buildable: False
  paths:
    openssl@develop: /usr

{% if not global_package is defined %}
jdk:
  buildable: False
  {% if environment.os == 'centos7.9' %}
  paths:
    jdk@1.8.0_272-b10: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.272.b10-1.el7_9.x86_64
  version: [1.8.0_272-b10]
  {% elif environment.os == 'rhel7.7' %}
  paths:
    jdk@1.8.0_242-b08: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.242.b08-0.el7_7.x86_64
  version: [1.8.0_242-b08]
  {% elif environment.os == 'rhel7.6' %}
  paths:
    jdk@1.8.0_222-b10: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.222.b10-0.el7_6.x86_64
  version: [1.8.0_222-b10]
  {% endif %}

slurm:
  buildable: False
  paths:
  {% if 'cloud' in environment and environment.cloud == 'gcp' %}
    slurm@ {{environment.slurm}}: /apps/slurm/slurm-{{environment.slurm}}
  {% else %}
    slurm@{{environment.slurm}}: /usr
  {% endif %}
  version: [{{environment.slurm}}]
{% endif %}
####
# Concretization preferences
####
guile:
  variants: '~threads'

py-numpy:
  # limitation due to tensorflow
  version: [1.18]


{% if not 'cloud' in environment %}
####
# Third party software
####
abaqus:
  buildable: False
  paths:
    abaqus@6.14-1%intel@18.0.5: {{ spack_external_root }}/abaqus/6.14-1

adf:
  buildable: False
  paths:
    adf@2017.111 %{{environment.core_compiler}}: {{ spack_external_root }}/adf/adf2017.111

ansys:
  buildable: False
  paths:
    ansys@17.1%{{environment.core_compiler}}: {{ spack_external_root }}/ansys/17.1/v171
    ansys@19.2%{{environment.core_compiler}}: {{ spack_external_root }}/ansys/19.2/v192

cfdplusplus:
  buildable: False
  paths:
    cfdplusplus@16.1%{{environment.core_compiler}}: {{ spack_external_root }}/CFD++/2016.05
    cfdplusplus@19.1%{{environment.core_compiler}}: {{ spack_external_root }}/CFD++/19.1

comsol:
  buildable: False
  paths:
    comsol@5.3 %{{environment.core_compiler}}: {{ spack_external_root }}/comsol/5.3
    comsol@5.4 %{{environment.core_compiler}}: {{ spack_external_root }}/comsol/5.4

fdtd:
  buildable: False
  paths:
    fdtd@8.20.1703 %{{environment.core_compiler}}: {{ spack_external_root }}/fdtd/8.20.1703
    fdtd@8.19.1416-1 %{{environment.core_compiler}}: {{ spack_external_root }}/fdtd/8.19.1416-1
    # installed due to segfault with other versions INC0204566
    fdtd@8.12.527 %{{environment.core_compiler}}: {{ spack_external_root }}/fdtd/8.12.527

likwid:
  buildable: False
  paths:
    likwid@4.3.0 %{{environment.core_compiler}}: {{ spack_external_root }}/LIKWID/4.3.0

gurobi:
  buildable: False
  paths:
    gurobi@8.1.1%{{environment.core_compiler}}: {{ spack_external_root }}/gurobi/8.1.1

gaussian:
  buildable: False
  paths:
    gaussian@g16-A.03 %{{environment.core_compiler}}: {{ spack_external_root }}/gaussian/g16-A.03
    gaussian@g16-C.01 %{{environment.core_compiler}}: {{ spack_external_root }}/gaussian/g16-C.01

matlab:
  buildable: False
  paths:
    matlab@R2018a %{{environment.core_compiler}}: {{ spack_external_root }}/MATLAB/R2018a
    matlab@R2019b %{{environment.core_compiler}}: {{ spack_external_root }}/MATLAB/R2019b

maple:
  buildable: False
  paths:
    maple@2017 %{{environment.core_compiler}}: {{ spack_external_root }}/Maple/2017

mathematica:
  buildable: False
  paths:
    mathematica@9.0.1 %{{environment.core_compiler}}: {{ spack_external_root }}/Mathematica/9.0.1
    mathematica@11.1.1 %{{environment.core_compiler}}: {{ spack_external_root }}/Mathematica/11.1.1

smr:
  buildable: False
  paths:
    smr@2017.06 %{{environment.core_compiler}}: {{ spack_external_root }}/SMR/2017.06

totalview:
  buildable: False
  paths:
    totalview@2017.2.11 %{{environment.core_compiler}}: {{ spack_external_root }}/toolworks/totalview.2017.2.11

crystal17:
  permissions:
    read: group
    group: crystal-soft

molpro:
  permissions:
    read: group
    group: molpro-soft

vasp:
  permissions:
    read: group
    group: vasp-soft
{% endif %}
