modules:
  enable:
    - tcl
    - lmod
  lmod:
    hash_length: 0
    core_compilers:
      - {{ environment.core_compiler | filter_variant }}
{% if not environment.bootstrap %}
  {% for _type in environment.stack_types %}
    {% for _compiler, stack in environment[_type].items() %}
      {% if _compiler in environment.compilers  and 'core_compiler' in stack %}
      - {{ stack.core_compiler }}
      {% endif %}
    {% endfor %}
  {% endfor %}
{% endif %}

{% if lmod is defined %}
    hierarchy: {{ lmod.hierarchy }}
{% else %}
    hierarchy:
      - mpi
{% endif %}
    all:
      suffixes:
        {% filter indent(width=8, first=True) %}
        {% include 'templates/common/modules_suffixes.yaml.j2' %}
        {% include 'templates/{{ site }}/modules_suffixes.yaml.j2' ignore missing %}
        {% endfilter %}
          
      environment:
        set:
          ${PACKAGE}_ROOT: ${PREFIX}
        unset: []

      filter:
        environment_blacklist: []

    {% set spack_site_whitelist = 'templates/' + site + '/modules_whitelist.yaml.j2' %}
    whitelist:
      {% filter indent(width=6, first=True) %}
      {% include 'templates/common/modules_whitelist.yaml.j2' %}
      {% include spack_site_whitelist ignore missing %}
      {% endfilter %}

    {% set spack_site_blacklist = 'templates/' + site + '/modules_blacklist.yaml.j2' %}
    {% if spack_site_blacklist | exists %}
    blacklist:
{% if not environment.bootstrap %}
  {% for _type in environment.stack_types %}
    {% for _compiler, stack in environment[_type].items() %}
      {% if _compiler in environment.compilers  and 'core_compiler' in stack %}
      - {{ stack.core_compiler }}
      {% endif %}
    {% endfor %}
  {% endfor %}
{% endif %}
      {% filter indent(width=6, first=True) %}
      {% include spack_site_blacklist %}
      {% endfilter %}
    {% endif %}

    verbose: false
    blacklist_implicits: {{ blacklist_implicits | default(true) }}

    {% filter indent(width=4, first=True) %}
    {% include 'templates/' + site + '/modules_lmod_specific.yaml.j2' ignore missing %}
    {% endfilter %}
